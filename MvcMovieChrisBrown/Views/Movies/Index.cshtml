@model MvcMovieChrisBrown.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Search";
}

<h2>Search</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get" class="col-md-3">
    <div class="form-group has-float-label">
        <label for="movieGenre">Genre:</label>
        <select class="form-control" asp-for="movieGenre" asp-items="Model.genres">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group has-float-label">
        <label for="SearchString">Title:</label>
        <input type="text" name="SearchString" class="form-control">
    </div>
    <input type="submit" value="Filter" class="btn btn-info" />
</form>

<table class="table table-responsive table-striped">
    <thead>
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.movies[0].Title), "Index", new { sortOrder = ViewBag.TitleSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.movies[0].ReleaseDate), "Index", new { sortOrder = ViewBag.ReleaseDateSortParm })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
@{
    var prevDisabled = !Model.movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.movies.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.movies.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.movies.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>